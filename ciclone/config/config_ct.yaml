name: "CTpre / CTpost"

stages:
  - name: visual_inspection
    depends_on: []
    auto_clean: true
    operations:
      - type: open_fsleyes
        workdir: preop/ct
        files: ["${name}_CT_Bone"]
      - type: apply_nudgetransformation
        workdir: preop/ct
        files: ["${name}_CT_Bone", "${name}_CT_Bone.mat", "${name}_CT_Bone", "${name}_CT_Bone_N"]
      - type: crop
        workdir: preop/ct
        files: ["${name}_CT_Bone_N", "${name}_CT_Bone_C"]
      - type: move
        workdir: preop/ct
        files: ["${name}_CT_Bone_C", "${subj_dir}/processed_tmp"]
      - type: open_fsleyes
        workdir: postop/ct
        files: ["${name}_CT_Electrodes"]
      - type: apply_nudgetransformation
        workdir: postop/ct
        files: ["${name}_CT_Electrodes", "${name}_CT_Electrodes.mat", "${name}_CT_Electrodes", "${name}_CT_Electrodes_N"]
      - type: crop
        workdir: postop/ct
        files: ["${name}_CT_Electrodes_N", "${name}_CT_Electrodes_C"]
      - type: move
        workdir: postop/ct
        files: ["${name}_CT_Electrodes_C", "${subj_dir}/processed_tmp"]
      - type: open_fsleyes
        workdir: preop/mri
        files: ["${name}_T1"]
      - type: apply_nudgetransformation
        workdir: preop/mri
        files: ["${name}_T1", "${name}_T1.mat", "${name}_T1", "${name}_T1_N"]
      - type: crop
        workdir: preop/mri
        files: ["${name}_T1_N", "${name}_T1_C"]
      - type: move
        workdir: preop/mri
        files: ["${name}_T1_C", "${subj_dir}/processed_tmp"]

  - name: coregisteration
    depends_on: [visual_inspection]
    auto_clean: true
    operations:
      - type: coregister
        workdir: processed_tmp
        files: ["${name}_CT_Bone_C", "${name}_CT_Electrodes_C", "v_${name}_bone_mask"]
      - type: coregister
        workdir: processed_tmp
        files: ["${name}_T1_C", "${name}_CT_Electrodes_C", "v_${name}_ref"]
      - type: coregister
        workdir: processed_tmp
        files: ["${name}_CT_Electrodes_C", "${name}_CT_Bone_C", "b_${name}_postimplant_ct"]

  - name: extract_electrodes
    depends_on: [coregisteration]
    auto_clean: true
    operations:
      - type: subtract
        workdir: processed_tmp
        files: ["b_${name}_postimplant_ct", "${name}_CT_Bone_C", "b_${name}_postimplant_ct_sub"]
      - type: threshold
        workdir: processed_tmp
        files: ["b_${name}_postimplant_ct_sub", "b_${name}_seeg"]
      - type: apply_transformation
        workdir: processed_tmp
        files: ["b_${name}_seeg", "v_${name}_bone_mask.mat", "${name}_CT_Electrodes_C", "r_${name}_seeg"]

  - name: apply_mask
    depends_on: [extract_electrodes]
    auto_clean: true
    operations:
      - type: extract_brain
        workdir: processed_tmp
        files: ["v_${name}_bone_mask", "${name}_stripped"]
      - type: mask
        workdir: processed_tmp
        files: ["r_${name}_seeg", "${name}_stripped_mask", "r_${name}_seeg_masked"]

  - name: mni_registration
    depends_on: [coregisteration]
    auto_clean: true
    operations:
      - type: extract_brain2
        workdir: processed_tmp
        files: ["v_${name}_ref", "v_${name}_ref_brain"]
      - type: register_mri_to_mni
        workdir: processed_tmp
        files: ["v_${name}_ref_brain", "MNI_${name}_ref_brain"]

  - name: cortical_extraction
    depends_on: [coregisteration]
    auto_clean: true
    operations:
      - type: reconstruct
        workdir: processed_tmp
        files: ["v_${name}_ref", "${subj_dir}/processed_tmp/freesurfer_${name}"]

  - name: export_outputs
    depends_on: [visual_inspection, coregisteration, apply_mask, mni_registration]
    auto_clean: false
    operations:
      - type: copy
        workdir: processed_tmp
        files: ["${name}_CT_Electrodes_C", "${subj_dir}/pipeline_output"]
      - type: copy
        workdir: processed_tmp
        files: ["${name}_T1_C", "${subj_dir}/pipeline_output"]
      - type: copy
        workdir: processed_tmp
        files: ["v_${name}_ref", "${subj_dir}/pipeline_output"]
      - type: copy
        workdir: processed_tmp
        files: ["r_${name}_seeg_masked", "${subj_dir}/pipeline_output"]
      - type: copy
        workdir: processed_tmp
        files: ["MNI_${name}_ref_brain", "${subj_dir}/pipeline_output"]
      - type: copy
        workdir: processed_tmp
        files: ["MNI_${name}_ref_brain.mat", "${subj_dir}/pipeline_output"]