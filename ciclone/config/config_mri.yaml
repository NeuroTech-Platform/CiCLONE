name: "MRIpre / MRIpost"

stages:
  - name: visual_inspection
    depends_on: []
    outputs:
      - "${name}_CT_Bone_R2S_C"
      - "${name}_CT_Electrodes_R2S_C"  
      - "${name}_T1_R2S_C"
    cleanup_patterns:
      - "*_N.nii*"
      - "*_N"
      - "*_C.nii*"
      - "*_C"
    auto_clean: true
    operations:
      - type: reorient_to_standard
        workdir: preop/ct
        files: ["${name}_CT_Bone", "${name}_CT_Bone_R2S"]
      - type: open_fsleyes
        workdir: preop/ct
        files: ["${name}_CT_Bone_R2S"]
      - type: apply_nudgetransformation
        workdir: preop/ct
        files: ["${name}_CT_Bone_R2S", "${name}_CT_Bone_R2S.mat", "${name}_CT_Bone_R2S", "${name}_CT_Bone_R2S_N"]
      - type: crop
        workdir: preop/ct
        files: ["${name}_CT_Bone_R2S_N", "${name}_CT_Bone_C"]
      - type: move
        workdir: preop/ct
        files: ["${name}_CT_Bone_C", "${subj_dir}/processed_tmp"]
      - type: reorient_to_standard
        workdir: postop/ct
        files: ["${name}_CT_Electrodes", "${name}_CT_Electrodes_R2S"]
      - type: open_fsleyes
        workdir: postop/ct
        files: ["${name}_CT_Electrodes_R2S"]  
      - type: apply_nudgetransformation
        workdir: postop/ct
        files: ["${name}_CT_Electrodes_R2S", "${name}_CT_Electrodes_R2S.mat", "${name}_CT_Electrodes_R2S", "${name}_CT_Electrodes_R2S_N"]
      - type: crop
        workdir: postop/ct
        files: ["${name}_CT_Electrodes_R2S_N", "${name}_CT_Electrodes_C"]
      - type: move
        workdir: postop/ct
        files: ["${name}_CT_Electrodes_C", "${subj_dir}/processed_tmp"]
      - type: reorient_to_standard
        workdir: preop/mri
        files: ["${name}_T1", "${name}_T1_R2S"]
      - type: open_fsleyes
        workdir: preop/mri
        files: ["${name}_T1_R2S"]
      - type: apply_nudgetransformation
        workdir: preop/mri
        files: ["${name}_T1_R2S", "${name}_T1_R2S.mat", "${name}_T1_R2S", "${name}_T1_R2S_N"]
      - type: crop
        workdir: preop/mri
        files: ["${name}_T1_R2S_N", "${name}_T1_C"]
      - type: move
        workdir: preop/mri
        files: ["${name}_T1_C", "${subj_dir}/processed_tmp"]

  - name: coregisteration
    depends_on: [visual_inspection]
    outputs:
      - "postT1_${name}"
    cleanup_patterns:
      - "postT1_${name}*"
    auto_clean: true
    operations:
      - type: coregister
        workdir: processed_tmp
        files: ["${name}_CT_Electrodes_C", "${name}_T1_C", "postT1_${name}"]

  - name: mni_registration
    depends_on: [coregisteration]
    outputs:
      - "MNI_${name}"
      - "MNI_${name}.mat"
    cleanup_patterns:
      - "MNI_*.nii*"
      - "MNI_*.mat"
      - "*_rigid*"
      - "norm_*"
      - "*_brain*"
    auto_clean: true
    operations:
      - type: extract_brain2
        workdir: processed_tmp
        files: ["postT1_${name}", "postT1_${name}_brain"]
      - type: register_mri_to_mni
        workdir: processed_tmp
        files: ["postT1_${name}_brain", "MNI_${name}"]

  - name: cortical_extraction
    depends_on: [coregisteration]
    outputs:
      - "freesurfer_${name}"
    cleanup_patterns:
      - "freesurfer_*"
    auto_clean: true
    operations:
      - type: reconstruct
        workdir: processed_tmp
        files: ["${name}_T1_C", "${subj_dir}/processed_tmp/freesurfer_${name}"]

  - name: export_outputs
    depends_on: [visual_inspection, coregisteration, mni_registration, cortical_extraction]
    outputs:
      - "pipeline_output/${name}_CT_Electrodes_C"
      - "pipeline_output/${name}_T1_C"
      - "pipeline_output/postT1_${name}"
      - "pipeline_output/MNI_${name}_ref_brain"
      - "pipeline_output/MNI_${name}_ref_brain.mat"
    cleanup_patterns:
      - "pipeline_output/*"
    auto_clean: true
    operations:
      - type: copy
        workdir: processed_tmp
        files: ["${name}_CT_Electrodes_C", "${subj_dir}/pipeline_output"]
      - type: copy
        workdir: processed_tmp
        files: ["${name}_T1_C", "${subj_dir}/pipeline_output"]
      - type: copy
        workdir: processed_tmp
        files: ["postT1_${name}", "${subj_dir}/pipeline_output"]
      - type: copy
        workdir: processed_tmp
        files: ["MNI_${name}", "${subj_dir}/pipeline_output"]
      - type: copy
        workdir: processed_tmp
        files: ["MNI_${name}.mat", "${subj_dir}/pipeline_output"]